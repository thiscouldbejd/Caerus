Namespace IBM

	''' <summary>Class Representing an IBM Blade Server</summary>
	''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
	''' <generator-date>08/02/2014 18:21:49</generator-date>
	''' <generator-functions>1</generator-functions>
	''' <generator-source>Caerus\_IBM\Generated\BladeServer.tt</generator-source>
	''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
	''' <generator-version>1</generator-version>
	<System.CodeDom.Compiler.GeneratedCode("Caerus\_IBM\Generated\BladeServer.tt", "1")> _
	<System.Serializable()> _
	Partial Public Class BladeServer
		Inherits System.Object
		Implements System.IComparable
		Implements System.IFormattable
		Implements System.Xml.Serialization.IXmlSerializable

		#Region " Public Constructors "

			''' <summary>Default Constructor</summary>
			Public Sub New()

				MyBase.New()

			End Sub

			''' <summary>Parametered Constructor (1 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32 _
			)

				MyBase.New()

				Index = _Index

			End Sub

			''' <summary>Parametered Constructor (2 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String _
			)

				MyBase.New()

				Index = _Index
				Name = _Name

			End Sub

			''' <summary>Parametered Constructor (3 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists

			End Sub

			''' <summary>Parametered Constructor (4 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered

			End Sub

			''' <summary>Parametered Constructor (5 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State

			End Sub

			''' <summary>Parametered Constructor (6 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity

			End Sub

			''' <summary>Parametered Constructor (7 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String, _
				ByVal _StateSummary As System.String _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity
				StateSummary = _StateSummary

			End Sub

			''' <summary>Parametered Constructor (8 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String, _
				ByVal _StateSummary As System.String, _
				ByVal _Manufacturer As System.String _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity
				StateSummary = _StateSummary
				Manufacturer = _Manufacturer

			End Sub

			''' <summary>Parametered Constructor (9 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String, _
				ByVal _StateSummary As System.String, _
				ByVal _Manufacturer As System.String, _
				ByVal _FruNumber As System.String _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity
				StateSummary = _StateSummary
				Manufacturer = _Manufacturer
				FruNumber = _FruNumber

			End Sub

			''' <summary>Parametered Constructor (10 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String, _
				ByVal _StateSummary As System.String, _
				ByVal _Manufacturer As System.String, _
				ByVal _FruNumber As System.String, _
				ByVal _Revision As System.Int32 _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity
				StateSummary = _StateSummary
				Manufacturer = _Manufacturer
				FruNumber = _FruNumber
				Revision = _Revision

			End Sub

			''' <summary>Parametered Constructor (11 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String, _
				ByVal _StateSummary As System.String, _
				ByVal _Manufacturer As System.String, _
				ByVal _FruNumber As System.String, _
				ByVal _Revision As System.Int32, _
				ByVal _SerialNumber As System.String _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity
				StateSummary = _StateSummary
				Manufacturer = _Manufacturer
				FruNumber = _FruNumber
				Revision = _Revision
				SerialNumber = _SerialNumber

			End Sub

			''' <summary>Parametered Constructor (12 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String, _
				ByVal _StateSummary As System.String, _
				ByVal _Manufacturer As System.String, _
				ByVal _FruNumber As System.String, _
				ByVal _Revision As System.Int32, _
				ByVal _SerialNumber As System.String, _
				ByVal _Type As System.String _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity
				StateSummary = _StateSummary
				Manufacturer = _Manufacturer
				FruNumber = _FruNumber
				Revision = _Revision
				SerialNumber = _SerialNumber
				[Type] = _Type

			End Sub

			''' <summary>Parametered Constructor (13 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String, _
				ByVal _StateSummary As System.String, _
				ByVal _Manufacturer As System.String, _
				ByVal _FruNumber As System.String, _
				ByVal _Revision As System.Int32, _
				ByVal _SerialNumber As System.String, _
				ByVal _Type As System.String, _
				ByVal _FruSerialNumber As System.String _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity
				StateSummary = _StateSummary
				Manufacturer = _Manufacturer
				FruNumber = _FruNumber
				Revision = _Revision
				SerialNumber = _SerialNumber
				[Type] = _Type
				FruSerialNumber = _FruSerialNumber

			End Sub

			''' <summary>Parametered Constructor (14 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String, _
				ByVal _StateSummary As System.String, _
				ByVal _Manufacturer As System.String, _
				ByVal _FruNumber As System.String, _
				ByVal _Revision As System.Int32, _
				ByVal _SerialNumber As System.String, _
				ByVal _Type As System.String, _
				ByVal _FruSerialNumber As System.String, _
				ByVal _Model As System.String _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity
				StateSummary = _StateSummary
				Manufacturer = _Manufacturer
				FruNumber = _FruNumber
				Revision = _Revision
				SerialNumber = _SerialNumber
				[Type] = _Type
				FruSerialNumber = _FruSerialNumber
				Model = _Model

			End Sub

			''' <summary>Parametered Constructor (15 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String, _
				ByVal _StateSummary As System.String, _
				ByVal _Manufacturer As System.String, _
				ByVal _FruNumber As System.String, _
				ByVal _Revision As System.Int32, _
				ByVal _SerialNumber As System.String, _
				ByVal _Type As System.String, _
				ByVal _FruSerialNumber As System.String, _
				ByVal _Model As System.String, _
				ByVal _PhysicalAddress1 As System.Net.NetworkInformation.PhysicalAddress _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity
				StateSummary = _StateSummary
				Manufacturer = _Manufacturer
				FruNumber = _FruNumber
				Revision = _Revision
				SerialNumber = _SerialNumber
				[Type] = _Type
				FruSerialNumber = _FruSerialNumber
				Model = _Model
				PhysicalAddress1 = _PhysicalAddress1

			End Sub

			''' <summary>Parametered Constructor (16 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Name As System.String, _
				ByVal _Exists As System.Boolean, _
				ByVal _Powered As System.Boolean, _
				ByVal _State As BladeState, _
				ByVal _StateSeverity As System.String, _
				ByVal _StateSummary As System.String, _
				ByVal _Manufacturer As System.String, _
				ByVal _FruNumber As System.String, _
				ByVal _Revision As System.Int32, _
				ByVal _SerialNumber As System.String, _
				ByVal _Type As System.String, _
				ByVal _FruSerialNumber As System.String, _
				ByVal _Model As System.String, _
				ByVal _PhysicalAddress1 As System.Net.NetworkInformation.PhysicalAddress, _
				ByVal _PhysicalAddress2 As System.Net.NetworkInformation.PhysicalAddress _
			)

				MyBase.New()

				Index = _Index
				Name = _Name
				Exists = _Exists
				Powered = _Powered
				State = _State
				StateSeverity = _StateSeverity
				StateSummary = _StateSummary
				Manufacturer = _Manufacturer
				FruNumber = _FruNumber
				Revision = _Revision
				SerialNumber = _SerialNumber
				[Type] = _Type
				FruSerialNumber = _FruSerialNumber
				Model = _Model
				PhysicalAddress1 = _PhysicalAddress1
				PhysicalAddress2 = _PhysicalAddress2

			End Sub

		#End Region

		#Region " Class Plumbing/Interface Code "

			#Region " IComparable Implementation "

				#Region " Public Methods "

					''' <summary>Comparison Method</summary>
					Public Overridable Function IComparable_CompareTo( _
						ByVal value As System.Object _
					) As System.Int32 Implements System.IComparable.CompareTo

						Dim typed_Value As BladeServer = TryCast(value, BladeServer)

						If typed_Value Is Nothing Then

							Throw New ArgumentException(String.Format("Value is not of comparable type: {0}", value.GetType.Name), "Value")

						Else

							Dim return_Value As Integer = 0

							return_Value = Index.CompareTo(typed_Value.Index)
							If return_Value <> 0 Then Return return_Value

							Return return_Value

						End If

					End Function

				#End Region

			#End Region

			#Region " IFormattable Implementation "

				#Region " Public Constants "

					''' <summary>Public Shared Reference to the Name of the Property: AsString</summary>
					''' <remarks></remarks>
					Public Const PROPERTY_ASSTRING As String = "AsString"

				#End Region

				#Region " Public Properties "

					''' <summary></summary>
					''' <remarks></remarks>
					Public ReadOnly Property AsString() As System.String
						Get
							Return Me.ToString()
						End Get
					End Property

				#End Region

				#Region " Public Shared Methods "

					Public Shared Function ToString_default( _
						ByVal Name As System.String _
					) As String

						Return String.Format( _
							"{0}", _
							Name)

					End Function

				#End Region

				#Region " Public Methods "

					Public Overloads Overrides Function ToString() As String

						Return Me.ToString(String.Empty, Nothing)

					End Function

					Public Overloads Function ToString( _
						ByVal format As String _
					) As String

						If String.IsNullOrEmpty(format) OrElse String.Compare(format, "default", True) = 0 Then

							Return ToString_default( _
								Name _
							)

						End If

						Return String.Empty

					End Function

					Public Overloads Function ToString( _
						ByVal format As String, _
						ByVal formatProvider As System.IFormatProvider _
					) As String Implements System.IFormattable.ToString

						If String.IsNullOrEmpty(format) OrElse String.Compare(format, "default", True) = 0 Then	

							Return ToString_default( _
								Name _
							)

						End If

						Return String.Empty

					End Function

				#End Region

			#End Region

			#Region " IXmlSerialisable Implementation "

				#Region " Public Methods "

					''' <summary>Method to Return Schema Depicting Object/Class</summary>
					''' <remarks></remarks>
					Public Function IXmlSerialisable_GetSchema() As System.Xml.Schema.XmlSchema Implements System.Xml.Serialization.IXmlSerializable.GetSchema
						Return Leviathan.Configuration.XmlSerialiser.GenerateSchema(Me.GetType)
					End Function

					''' <summary></summary>
					''' <remarks></remarks>
					Public Sub IXmlSerialisable_ReadXml( _
						ByVal reader As System.Xml.XmlReader _
					) Implements System.Xml.Serialization.IXmlSerializable.ReadXml
						Leviathan.Configuration.XmlSerialiser.ReadXml(Me, reader)
					End Sub

					''' <summary></summary>
					''' <remarks></remarks>
					Public Sub IXmlSerialisable_WriteXml( _
						ByVal writer As System.Xml.XmlWriter _
					) Implements System.Xml.Serialization.IXmlSerializable.WriteXml
						Leviathan.Configuration.XmlSerialiser.WriteXml(Me, writer)
					End Sub

				#End Region

			#End Region

		#End Region

		#Region " Public Constants "

			''' <summary>Public Shared Reference to the Name of the Property: Index</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_INDEX As String = "Index"

			''' <summary>Public Shared Reference to the Name of the Property: Name</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_NAME As String = "Name"

			''' <summary>Public Shared Reference to the Name of the Property: Exists</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_EXISTS As String = "Exists"

			''' <summary>Public Shared Reference to the Name of the Property: Powered</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_POWERED As String = "Powered"

			''' <summary>Public Shared Reference to the Name of the Property: State</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_STATE As String = "State"

			''' <summary>Public Shared Reference to the Name of the Property: StateSeverity</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_STATESEVERITY As String = "StateSeverity"

			''' <summary>Public Shared Reference to the Name of the Property: StateSummary</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_STATESUMMARY As String = "StateSummary"

			''' <summary>Public Shared Reference to the Name of the Property: Manufacturer</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_MANUFACTURER As String = "Manufacturer"

			''' <summary>Public Shared Reference to the Name of the Property: FruNumber</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_FRUNUMBER As String = "FruNumber"

			''' <summary>Public Shared Reference to the Name of the Property: Revision</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_REVISION As String = "Revision"

			''' <summary>Public Shared Reference to the Name of the Property: SerialNumber</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_SERIALNUMBER As String = "SerialNumber"

			''' <summary>Public Shared Reference to the Name of the Property: Type</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_TYPE As String = "Type"

			''' <summary>Public Shared Reference to the Name of the Property: FruSerialNumber</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_FRUSERIALNUMBER As String = "FruSerialNumber"

			''' <summary>Public Shared Reference to the Name of the Property: Model</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_MODEL As String = "Model"

			''' <summary>Public Shared Reference to the Name of the Property: PhysicalAddress1</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_PHYSICALADDRESS1 As String = "PhysicalAddress1"

			''' <summary>Public Shared Reference to the Name of the Property: PhysicalAddress2</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_PHYSICALADDRESS2 As String = "PhysicalAddress2"

		#End Region

		#Region " Private Variables "

			''' <summary>Private Data Storage Variable for Property: Index</summary>
			''' <remarks></remarks>
			Private m_Index As System.Int32

			''' <summary>Private Data Storage Variable for Property: Name</summary>
			''' <remarks></remarks>
			Private m_Name As System.String

			''' <summary>Private Data Storage Variable for Property: Exists</summary>
			''' <remarks></remarks>
			Private m_Exists As System.Boolean

			''' <summary>Private Data Storage Variable for Property: Powered</summary>
			''' <remarks></remarks>
			Private m_Powered As System.Boolean

			''' <summary>Private Data Storage Variable for Property: State</summary>
			''' <remarks></remarks>
			Private m_State As BladeState

			''' <summary>Private Data Storage Variable for Property: StateSeverity</summary>
			''' <remarks></remarks>
			Private m_StateSeverity As System.String

			''' <summary>Private Data Storage Variable for Property: StateSummary</summary>
			''' <remarks></remarks>
			Private m_StateSummary As System.String

			''' <summary>Private Data Storage Variable for Property: Manufacturer</summary>
			''' <remarks></remarks>
			Private m_Manufacturer As System.String

			''' <summary>Private Data Storage Variable for Property: FruNumber</summary>
			''' <remarks></remarks>
			Private m_FruNumber As System.String

			''' <summary>Private Data Storage Variable for Property: Revision</summary>
			''' <remarks></remarks>
			Private m_Revision As System.Int32

			''' <summary>Private Data Storage Variable for Property: SerialNumber</summary>
			''' <remarks></remarks>
			Private m_SerialNumber As System.String

			''' <summary>Private Data Storage Variable for Property: Type</summary>
			''' <remarks></remarks>
			Private m_Type As System.String

			''' <summary>Private Data Storage Variable for Property: FruSerialNumber</summary>
			''' <remarks></remarks>
			Private m_FruSerialNumber As System.String

			''' <summary>Private Data Storage Variable for Property: Model</summary>
			''' <remarks></remarks>
			Private m_Model As System.String

			''' <summary>Private Data Storage Variable for Property: PhysicalAddress1</summary>
			''' <remarks></remarks>
			Private m_PhysicalAddress1 As System.Net.NetworkInformation.PhysicalAddress

			''' <summary>Private Data Storage Variable for Property: PhysicalAddress2</summary>
			''' <remarks></remarks>
			Private m_PhysicalAddress2 As System.Net.NetworkInformation.PhysicalAddress

		#End Region

		#Region " Public Properties "

			''' <summary>Provides Access to the Property: Index</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Index")> _
			Public Property Index() As System.Int32
				Get
					Return m_Index
				End Get
				Set(value As System.Int32)
					m_Index = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Name</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Name")> _
			Public Property Name() As System.String
				Get
					Return m_Name
				End Get
				Set(value As System.String)
					m_Name = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Exists</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Exists")> _
			Public Property Exists() As System.Boolean
				Get
					Return m_Exists
				End Get
				Set(value As System.Boolean)
					m_Exists = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Powered</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Powered")> _
			Public Property Powered() As System.Boolean
				Get
					Return m_Powered
				End Get
				Set(value As System.Boolean)
					m_Powered = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: State</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="State")> _
			Public Property State() As BladeState
				Get
					Return m_State
				End Get
				Set(value As BladeState)
					m_State = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: StateSeverity</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="StateSeverity")> _
			Public Property StateSeverity() As System.String
				Get
					Return m_StateSeverity
				End Get
				Set(value As System.String)
					m_StateSeverity = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: StateSummary</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="StateSummary")> _
			Public Property StateSummary() As System.String
				Get
					Return m_StateSummary
				End Get
				Set(value As System.String)
					m_StateSummary = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Manufacturer</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Manufacturer")> _
			Public Property Manufacturer() As System.String
				Get
					Return m_Manufacturer
				End Get
				Set(value As System.String)
					m_Manufacturer = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: FruNumber</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="FruNumber")> _
			Public Property FruNumber() As System.String
				Get
					Return m_FruNumber
				End Get
				Set(value As System.String)
					m_FruNumber = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Revision</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Revision")> _
			Public Property Revision() As System.Int32
				Get
					Return m_Revision
				End Get
				Set(value As System.Int32)
					m_Revision = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: SerialNumber</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="SerialNumber")> _
			Public Property SerialNumber() As System.String
				Get
					Return m_SerialNumber
				End Get
				Set(value As System.String)
					m_SerialNumber = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Type</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Type")> _
			Public Property [Type]() As System.String
				Get
					Return m_Type
				End Get
				Set(value As System.String)
					m_Type = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: FruSerialNumber</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="FruSerialNumber")> _
			Public Property FruSerialNumber() As System.String
				Get
					Return m_FruSerialNumber
				End Get
				Set(value As System.String)
					m_FruSerialNumber = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Model</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Model")> _
			Public Property Model() As System.String
				Get
					Return m_Model
				End Get
				Set(value As System.String)
					m_Model = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: PhysicalAddress1</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="PhysicalAddress1")> _
			Public Property PhysicalAddress1() As System.Net.NetworkInformation.PhysicalAddress
				Get
					Return m_PhysicalAddress1
				End Get
				Set(value As System.Net.NetworkInformation.PhysicalAddress)
					m_PhysicalAddress1 = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: PhysicalAddress2</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="PhysicalAddress2")> _
			Public Property PhysicalAddress2() As System.Net.NetworkInformation.PhysicalAddress
				Get
					Return m_PhysicalAddress2
				End Get
				Set(value As System.Net.NetworkInformation.PhysicalAddress)
					m_PhysicalAddress2 = value
				End Set
			End Property

		#End Region

	End Class

End Namespace