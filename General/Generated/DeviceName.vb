''' <summary></summary>
''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
''' <generator-date>08/02/2014 17:48:14</generator-date>
''' <generator-functions>1</generator-functions>
''' <generator-source>Caerus\General\Generated\DeviceName.tt</generator-source>
''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
''' <generator-version>1</generator-version>
<System.CodeDom.Compiler.GeneratedCode("Caerus\General\Generated\DeviceName.tt", "1")> _
<System.Serializable()> _
Partial Public Class DeviceName
	Inherits System.Object
	Implements System.Xml.Serialization.IXmlSerializable
	Implements System.IFormattable
	Implements System.IComparable

	#Region " Public Constructors "

		''' <summary>Default Constructor</summary>
		Public Sub New()

			MyBase.New()

		End Sub

		''' <summary>Parametered Constructor (1 Parameters)</summary>
		Public Sub New( _
			ByVal _Fqdn As System.String _
		)

			MyBase.New()

			Fqdn = _Fqdn

		End Sub

		''' <summary>Parametered Constructor (2 Parameters)</summary>
		Public Sub New( _
			ByVal _Fqdn As System.String, _
			ByVal _ShortName As System.String _
		)

			MyBase.New()

			Fqdn = _Fqdn
			ShortName = _ShortName

		End Sub

		''' <summary>Parametered Constructor (3 Parameters)</summary>
		Public Sub New( _
			ByVal _Fqdn As System.String, _
			ByVal _ShortName As System.String, _
			ByVal _IpAddresses As System.Net.IPAddress() _
		)

			MyBase.New()

			Fqdn = _Fqdn
			ShortName = _ShortName
			IpAddresses = _IpAddresses

		End Sub

		''' <summary>Parametered Constructor (4 Parameters)</summary>
		Public Sub New( _
			ByVal _Fqdn As System.String, _
			ByVal _ShortName As System.String, _
			ByVal _IpAddresses As System.Net.IPAddress(), _
			ByVal _Aliases As System.String() _
		)

			MyBase.New()

			Fqdn = _Fqdn
			ShortName = _ShortName
			IpAddresses = _IpAddresses
			Aliases = _Aliases

		End Sub

		''' <summary>Parametered Constructor (5 Parameters)</summary>
		Public Sub New( _
			ByVal _Fqdn As System.String, _
			ByVal _ShortName As System.String, _
			ByVal _IpAddresses As System.Net.IPAddress(), _
			ByVal _Aliases As System.String(), _
			ByVal _Organisation As System.String _
		)

			MyBase.New()

			Fqdn = _Fqdn
			ShortName = _ShortName
			IpAddresses = _IpAddresses
			Aliases = _Aliases
			m_Organisation = _Organisation

		End Sub

		''' <summary>Parametered Constructor (6 Parameters)</summary>
		Public Sub New( _
			ByVal _Fqdn As System.String, _
			ByVal _ShortName As System.String, _
			ByVal _IpAddresses As System.Net.IPAddress(), _
			ByVal _Aliases As System.String(), _
			ByVal _Organisation As System.String, _
			ByVal _Role As System.String _
		)

			MyBase.New()

			Fqdn = _Fqdn
			ShortName = _ShortName
			IpAddresses = _IpAddresses
			Aliases = _Aliases
			m_Organisation = _Organisation
			m_Role = _Role

		End Sub

		''' <summary>Parametered Constructor (7 Parameters)</summary>
		Public Sub New( _
			ByVal _Fqdn As System.String, _
			ByVal _ShortName As System.String, _
			ByVal _IpAddresses As System.Net.IPAddress(), _
			ByVal _Aliases As System.String(), _
			ByVal _Organisation As System.String, _
			ByVal _Role As System.String, _
			ByVal _Layer As System.String _
		)

			MyBase.New()

			Fqdn = _Fqdn
			ShortName = _ShortName
			IpAddresses = _IpAddresses
			Aliases = _Aliases
			m_Organisation = _Organisation
			m_Role = _Role
			m_Layer = _Layer

		End Sub

		''' <summary>Parametered Constructor (8 Parameters)</summary>
		Public Sub New( _
			ByVal _Fqdn As System.String, _
			ByVal _ShortName As System.String, _
			ByVal _IpAddresses As System.Net.IPAddress(), _
			ByVal _Aliases As System.String(), _
			ByVal _Organisation As System.String, _
			ByVal _Role As System.String, _
			ByVal _Layer As System.String, _
			ByVal _Area As System.String _
		)

			MyBase.New()

			Fqdn = _Fqdn
			ShortName = _ShortName
			IpAddresses = _IpAddresses
			Aliases = _Aliases
			m_Organisation = _Organisation
			m_Role = _Role
			m_Layer = _Layer
			m_Area = _Area

		End Sub

		''' <summary>Parametered Constructor (9 Parameters)</summary>
		Public Sub New( _
			ByVal _Fqdn As System.String, _
			ByVal _ShortName As System.String, _
			ByVal _IpAddresses As System.Net.IPAddress(), _
			ByVal _Aliases As System.String(), _
			ByVal _Organisation As System.String, _
			ByVal _Role As System.String, _
			ByVal _Layer As System.String, _
			ByVal _Area As System.String, _
			ByVal _Number As System.Int32 _
		)

			MyBase.New()

			Fqdn = _Fqdn
			ShortName = _ShortName
			IpAddresses = _IpAddresses
			Aliases = _Aliases
			m_Organisation = _Organisation
			m_Role = _Role
			m_Layer = _Layer
			m_Area = _Area
			m_Number = _Number

		End Sub

	#End Region

	#Region " Class Plumbing/Interface Code "

		#Region " IXmlSerialisable Implementation "

			#Region " Public Methods "

				''' <summary>Method to Return Schema Depicting Object/Class</summary>
				''' <remarks></remarks>
				Public Function IXmlSerialisable_GetSchema() As System.Xml.Schema.XmlSchema Implements System.Xml.Serialization.IXmlSerializable.GetSchema
					Return Leviathan.Configuration.XmlSerialiser.GenerateSchema(Me.GetType)
				End Function

				''' <summary></summary>
				''' <remarks></remarks>
				Public Sub IXmlSerialisable_ReadXml( _
					ByVal reader As System.Xml.XmlReader _
				) Implements System.Xml.Serialization.IXmlSerializable.ReadXml
					Leviathan.Configuration.XmlSerialiser.ReadXml(Me, reader)
				End Sub

				''' <summary></summary>
				''' <remarks></remarks>
				Public Sub IXmlSerialisable_WriteXml( _
					ByVal writer As System.Xml.XmlWriter _
				) Implements System.Xml.Serialization.IXmlSerializable.WriteXml
					Leviathan.Configuration.XmlSerialiser.WriteXml(Me, writer)
				End Sub

			#End Region

		#End Region

		#Region " IFormattable Implementation "

			#Region " Public Constants "

				''' <summary>Public Shared Reference to the Name of the Property: AsString</summary>
				''' <remarks></remarks>
				Public Const PROPERTY_ASSTRING As String = "AsString"

			#End Region

			#Region " Public Properties "

				''' <summary></summary>
				''' <remarks></remarks>
				Public ReadOnly Property AsString() As System.String
					Get
						Return Me.ToString()
					End Get
				End Property

			#End Region

			#Region " Public Shared Methods "

				Public Shared Function ToString_default( _
					ByVal Fqdn As System.String _
				) As String

					Return String.Format( _
						"{0}", _
						Fqdn)

				End Function

			#End Region

			#Region " Public Methods "

				Public Overloads Overrides Function ToString() As String

					Return Me.ToString(String.Empty, Nothing)

				End Function

				Public Overloads Function ToString( _
					ByVal format As String _
				) As String

					If String.IsNullOrEmpty(format) OrElse String.Compare(format, "default", True) = 0 Then

						Return ToString_default( _
							Fqdn _
						)

					End If

					Return String.Empty

				End Function

				Public Overloads Function ToString( _
					ByVal format As String, _
					ByVal formatProvider As System.IFormatProvider _
				) As String Implements System.IFormattable.ToString

					If String.IsNullOrEmpty(format) OrElse String.Compare(format, "default", True) = 0 Then	

						Return ToString_default( _
							Fqdn _
						)

					End If

					Return String.Empty

				End Function

			#End Region

		#End Region

		#Region " IComparable Implementation "

			#Region " Public Methods "

				''' <summary>Comparison Method</summary>
				Public Overridable Function IComparable_CompareTo( _
					ByVal value As System.Object _
				) As System.Int32 Implements System.IComparable.CompareTo

					Dim typed_Value As DeviceName = TryCast(value, DeviceName)

					If typed_Value Is Nothing Then

						Throw New ArgumentException(String.Format("Value is not of comparable type: {0}", value.GetType.Name), "Value")

					Else

						Dim return_Value As Integer = 0

						If Not Area Is Nothing Then return_Value = Area.CompareTo(typed_Value.Area)
						If return_Value <> 0 Then Return return_Value

						return_Value = Number.CompareTo(typed_Value.Number)
						If return_Value <> 0 Then Return return_Value

						Return return_Value

					End If

				End Function

			#End Region

		#End Region

	#End Region

	#Region " Public Constants "

		''' <summary>Public Shared Reference to the Name of the Property: Fqdn</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_FQDN As String = "Fqdn"

		''' <summary>Public Shared Reference to the Name of the Property: ShortName</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_SHORTNAME As String = "ShortName"

		''' <summary>Public Shared Reference to the Name of the Property: IpAddresses</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_IPADDRESSES As String = "IpAddresses"

		''' <summary>Public Shared Reference to the Name of the Property: Aliases</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_ALIASES As String = "Aliases"

		''' <summary>Public Shared Reference to the Name of the Property: Organisation</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_ORGANISATION As String = "Organisation"

		''' <summary>Public Shared Reference to the Name of the Property: Role</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_ROLE As String = "Role"

		''' <summary>Public Shared Reference to the Name of the Property: Layer</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_LAYER As String = "Layer"

		''' <summary>Public Shared Reference to the Name of the Property: Area</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_AREA As String = "Area"

		''' <summary>Public Shared Reference to the Name of the Property: Number</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_NUMBER As String = "Number"

	#End Region

	#Region " Private Variables "

		''' <summary>Private Data Storage Variable for Property: Fqdn</summary>
		''' <remarks></remarks>
		Private m_Fqdn As System.String

		''' <summary>Private Data Storage Variable for Property: ShortName</summary>
		''' <remarks></remarks>
		Private m_ShortName As System.String

		''' <summary>Private Data Storage Variable for Property: IpAddresses</summary>
		''' <remarks></remarks>
		Private m_IpAddresses As System.Net.IPAddress()

		''' <summary>Private Data Storage Variable for Property: Aliases</summary>
		''' <remarks></remarks>
		Private m_Aliases As System.String()

		''' <summary>Private Data Storage Variable for Property: Organisation</summary>
		''' <remarks></remarks>
		Private m_Organisation As System.String

		''' <summary>Private Data Storage Variable for Property: Role</summary>
		''' <remarks></remarks>
		Private m_Role As System.String

		''' <summary>Private Data Storage Variable for Property: Layer</summary>
		''' <remarks></remarks>
		Private m_Layer As System.String

		''' <summary>Private Data Storage Variable for Property: Area</summary>
		''' <remarks></remarks>
		Private m_Area As System.String

		''' <summary>Private Data Storage Variable for Property: Number</summary>
		''' <remarks></remarks>
		Private m_Number As System.Int32

	#End Region

	#Region " Public Properties "

		''' <summary>Provides Access to the Property: Fqdn</summary>
		''' <remarks></remarks>
		<System.Xml.Serialization.XmlElement(ElementName:="Fqdn")> _
		Public Property Fqdn() As System.String
			Get
				Return m_Fqdn
			End Get
			Set(value As System.String)
				m_Fqdn = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: ShortName</summary>
		''' <remarks></remarks>
		<System.Xml.Serialization.XmlElement(ElementName:="ShortName")> _
		Public Property ShortName() As System.String
			Get
				Return m_ShortName
			End Get
			Set(value As System.String)
				m_ShortName = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: IpAddresses</summary>
		''' <remarks></remarks>
		<System.Xml.Serialization.XmlElement(ElementName:="IpAddresses")> _
		Public Property IpAddresses() As System.Net.IPAddress()
			Get
				Return m_IpAddresses
			End Get
			Set(value As System.Net.IPAddress())
				m_IpAddresses = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: Aliases</summary>
		''' <remarks></remarks>
		<System.Xml.Serialization.XmlElement(ElementName:="Aliases")> _
		Public Property Aliases() As System.String()
			Get
				Return m_Aliases
			End Get
			Set(value As System.String())
				m_Aliases = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: Organisation</summary>
		''' <remarks></remarks>
		<System.Xml.Serialization.XmlElement(ElementName:="Organisation")> _
		Public ReadOnly Property Organisation() As System.String
			Get
				Return m_Organisation
			End Get
		End Property

		''' <summary>Provides Access to the Property: Role</summary>
		''' <remarks></remarks>
		<System.Xml.Serialization.XmlElement(ElementName:="Role")> _
		Public ReadOnly Property Role() As System.String
			Get
				Return m_Role
			End Get
		End Property

		''' <summary>Provides Access to the Property: Layer</summary>
		''' <remarks></remarks>
		<System.Xml.Serialization.XmlElement(ElementName:="Layer")> _
		Public ReadOnly Property Layer() As System.String
			Get
				Return m_Layer
			End Get
		End Property

		''' <summary>Provides Access to the Property: Area</summary>
		''' <remarks></remarks>
		<System.Xml.Serialization.XmlElement(ElementName:="Area")> _
		Public ReadOnly Property Area() As System.String
			Get
				Return m_Area
			End Get
		End Property

		''' <summary>Provides Access to the Property: Number</summary>
		''' <remarks></remarks>
		<System.Xml.Serialization.XmlElement(ElementName:="Number")> _
		Public ReadOnly Property Number() As System.Int32
			Get
				Return m_Number
			End Get
		End Property

	#End Region

End Class