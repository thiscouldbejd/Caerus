<# Add_Class(a:="Cisco", i:="NetworkInterface", d:="Access Point Interface") #>
<# Add_Behaviour(n:="Snmp") #>
<# Add_Field(n:="RadioType", t:="RadioInterfacePhysicalType", m:="Snmp:1.2.840.10036.4.1.1.1.{Index}", d:="This is an 8-bit integer value that identifies the PHY type supported by the attached PLCP and PMD") #>
<# Add_Field(n:="HTMode", t:="RadioInterfaceHtMode", m:="Snmp:1.3.6.1.4.1.9.9.607.1.1.2.1.1.{Index}", d:="This object represents the mode of operation of 802.11n interface at the physical layer.") #>
<# Add_Field(n:="HT40Mhz", t:="EnabledStatus", m:="Snmp:1.3.6.1.4.1.9.9.607.1.1.2.1.5.{Index}", d:="This object, when set to 'true', indicates that the 40 MHz Operation is enabled.") #>
<# Add_Field(n:="HTShortGuard20Mhz", t:="EnabledStatus", m:="Snmp:1.3.6.1.4.1.9.9.607.1.1.2.1.14.{Index}", d:="This object, when set to 'true', indicates that the Short Guard option is enabled for 20 MHz operation.") #>
<# Add_Field(n:="HTShortGuard40Mhz", t:="EnabledStatus", m:="Snmp:1.3.6.1.4.1.9.9.607.1.1.2.1.16.{Index}", d:="This object, when set to 'true', indicates that the Short Guard option is enabled for 40 MHz operation.") #>
<# Add_Field(n:="HTSpeeds", t:="WirelessSpeeds", m:="Snmp:1.3.6.1.4.1.9.9.626.1.1.1.1.1.{Index}", d:="This object represents the set of MCS at which the station may transmit data.  Each bit represents an MCS index and corresponds to a particular data rate. Each MCS shall be within the range from 0 to 127, and shall be supported for receiving data.") #>
<# Add_Field(n:="Channel", t:="System.Int32", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.2.5.1.3.{Index}", d:="The current operating frequency channel of the DSSS PHY, as selected either by selective scanning or via IEEE802dot11-MIB dot11CurrentChannel. Valid channel numbers are defined in the IEEE 802.11 Standard.") #>
<# Add_Field(n:="Clients", t:="System.Int64", m:="Snmp:1.3.6.1.4.1.9.9.273.1.1.2.1.1.{Index}", d:="This is the number of wireless clients currently associating with this device on this interface.") #>
<# Add_Field(n:="Bridges", t:="System.Int64", m:="Snmp:1.3.6.1.4.1.9.9.273.1.1.2.1.2.{Index}", d:="This is the number of bridges currently associating with this device on this interface.") #>
<# Add_Field(n:="Repeaters", t:="System.Int64", m:="Snmp:1.3.6.1.4.1.9.9.273.1.1.2.1.3.{Index}", d:="This is the number of repeaters currently associating with this device on this interface.") #>
<# Add_Field(n:="HistoricAssociations", t:="System.Int64", m:="Snmp:1.3.6.1.4.1.9.9.273.1.1.3.1.1.{Index}|Snmp_Transient:True", d:="The number of stations associated with this device on this interface since device re-started.") #>
<# Add_Field(n:="HistoricAuthentications", t:="System.Int64", m:="Snmp:1.3.6.1.4.1.9.9.273.1.1.3.1.2.{Index}|Snmp_Transient:True", d:="The number of stations authenticated with this device on this interface since device re-started.") #>
<# Add_Field(n:="HistoricRoamedIn", t:="System.Int64", m:="Snmp:1.3.6.1.4.1.9.9.273.1.1.3.1.3.{Index}|Snmp_Transient:True", d:="The number of stations roamed from another device to this device on this interface since device re-started.") #>
<# Add_Field(n:="HistoricRoamedOut", t:="System.Int64", m:="Snmp:1.3.6.1.4.1.9.9.273.1.1.3.1.4.{Index}|Snmp_Transient:True", d:="The number of stations roamed away from this device on this interface since device re-started.") #>
<# Add_Field(n:="HistoricDeauthentications", t:="System.Int64", m:="Snmp:1.3.6.1.4.1.9.9.273.1.1.3.1.5.{Index}|Snmp_Transient:True", d:="The number of stations deauthenticated with this device on this interface since device re-started.") #>
<# Add_Field(n:="HistoricDisassociations", t:="System.Int64", m:="Snmp:1.3.6.1.4.1.9.9.273.1.1.3.1.6.{Index}|Snmp_Transient:True", d:="The number of stations disassociated with this device on this interface since device re-started.") #>
<# Add_Field(n:="RoleType", t:="RadioInterfaceRoleType", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.1.1.1.1.{Index}", d:="This defines the role of this station itself within the 802.11 BSS of which it is a member.") #>
<# Add_Field(n:="ExtensionsEnabled", t:="System.Boolean", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.1.1.1.2.{Index}", d:="Cisco Aironet extensions to the basic IEEE802 protocols are enabled if the value is 'true'. The extension enables better BSS performance and faster roaming. If the value is 'false', only the basic IEEE 802.11 protocols are used. This ensures maximum compatibility with non-Cisco equipment. The default value is 'true'.") #>
<# Add_Field(n:="AllowBroadcastSsid", t:="System.Boolean", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.1.1.1.3.{Index}", d:="If the value of cd11IfStationRole is either 'roleRoot' or 'roleRepeater', and if cd11IfAllowBroadcastSsidAssoc is 'true', the device radio driver will respondto Broadcast SSID Probe Requests and will broadcast its own SSID within its beacons. If cd11IfAllowBroadcastSsidAssoc is 'false', the radio will not respond to the Broadcast SSID and will not broadcast its SSID within beacons. The default value is 'true'.") #>
<# Add_Field(n:="MultipleBssidEnabled", t:="System.Boolean", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.1.1.1.16.{Index}", d:="If it is 'true', multiple broadcast SSID is enabled on the radio. To a wireless client, a MBSSID AP appears to be several distinct co-located APs, and it transmits a beacon for each broadcast SSID or SSID. This allows all of the SSIDs visible for passive scanning.") #>
<# Add_Field(n:="VoipExtensions", t:="System.Boolean", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.1.1.1.9.{Index}", d:="This object enables the radio generate proprietary elements in its beacons and probe responses to support Voice-over-IP (VoIP) phones.  The default value is 'true'.") #>
<# Add_Field(n:="PowerLevels", t:="System.Int32", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.2.17.1.1.{Index}.1+", d:="The number of transmit power levels of a radio frequency band for the radio.  The value of this object should be the same as the maximum cd11IfNativeTxPowerLevel of the same ifIndex, cd11IfRadioFrequencyBand, and cd11IfRadioModulationClass. If the value of this object is 0, the radio can only receive, not transmit, on this frequency band and modulation technique.") #>
<# Add_Field(n:="PowerLevels_Client", t:="System.Int32", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.2.13.1.1.{Index}", d:="cd11IfClientNumberTxPowerLevels. The number of power levels available for the clients. This attribute can have a value of 1 to 8") #>
<# Add_Field(n:="CurrentPowerLevel", t:="System.Int32", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.2.17.1.2.{Index}.1+", d:="If cd11IfPhyNativePowerUseStandard is 'false', this object configures the current transmit power level of a radio frequency band for the radio. The value shall be one of the supported cd11IfNativeTxPowerLevel for the radio of the same frequency band and modulation technique. For any radio does not transmit power in the specified radio frequency band and modulation technique, the value of this object is 0.") #>
<# Add_Field(n:="CurrentPowerLevel_Client", t:="System.Int32", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.2.13.1.10.{Index}", d:="cd11IfClientCurrentTxPowerLevel. The TxPowerLevel N currently selected for client to transmit data. It is up to the clients to honor this transmit power setting.") #>
<# Add_Field(n:="MPDU_Tx", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.1.1.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall be incremented for an acknowledged MPDU with an individual address in the address 1 field or an MPDU with a multicast address in the address 1 field of type Data or Management (MPDU = MAC Protocol Data Unit | Fragemented Unit of a MSDU).") #>
<# Add_Field(n:="MPDU_Rx", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.10.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall be incremented for each successfully received MPDU of type Data or Management (MPDU = MAC Protocol Data Unit | Fragemented Unit of a MSDU).") #>
<# Add_Field(n:="MSDU_Tx_Multicast", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.2.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment only when the multicast bit is set in the destination MAC address of a successfully transmitted MSDU.  When operating as a STA in an ESS, where these frames are directed to the AP, this implies having received an acknowledgment to all associated MPDUs (MSDU = MAC Service Data Unit / Frame).") #>
<# Add_Field(n:="MSDU_Rx_Multicast", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.11.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when a MSDU is received with the multicast bit set in the destination MAC address (MSDU = MAC Service Data Unit / Frame).") #>
<# Add_Field(n:="MSDU_Tx", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.13.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment for each successfully transmitted MSDU (MSDU = MAC Service Data Unit / Frame).") #>
<# Add_Field(n:="MSDU_Tx_Failed", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.3.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when an MSDU is not transmitted successfully due to the number of transmit attempts exceeding either the  dot11ShortRetryLimit or dot11LongRetryLimit (MSDU = MAC Service Data Unit / Frame).") #>
<# Add_Field(n:="MSDU_Tx_Retries", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.4.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when an MSDU is successfully transmitted after one or more retransmissions (MSDU = MAC Service Data Unit / Frame).") #>
<# Add_Field(n:="MSDU_Tx_MultipleRetries", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.5.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when an MSDU is successfully transmitted after more than one retransmission (MSDU = MAC Service Data Unit / Frame).") #>
<# Add_Field(n:="MSDU_Tx_Energy_Error", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.3.6.1.4.1.9.9.272.1.2.1.1.1.1.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when a frame transmission is deferred due to energy detection (MSDU = MAC Service Data Unit / Frame).") #>
<# Add_Field(n:="MSDU_Rx_Duplicates", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.6.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when a frame is received that the Sequence Control field indicates is a duplicate (MSDU = MAC Service Data Unit / Frame).") #>
<# Add_Field(n:="MSDU_Rx_RTS_Success", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.7.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when a CTS is received in response to an RTS (MSDU = MAC Service Data Unit / Frame | RTS/CTS = (Request to Send / Clear to Send)).") #>
<# Add_Field(n:="MSDU_Rx_RTS_Error", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.8.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when a CTS is not received in response to an RTS (MSDU = MAC Service Data Unit / Frame | RTS/CTS = (Request to Send / Clear to Send)).") #>
<# Add_Field(n:="MSDU_Rx_ACK_Error", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.9.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when an ACK is not received when expected (MSDU = MAC Service Data Unit / Frame | ACK = Acknowledgement TCP Frame).") #>
<# Add_Field(n:="MSDU_Rx_FCS_Error", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.12.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when an FCS error is detected in a received MPDU. The transmitting STA uses a cyclic redundancy check (CRC) over all the fields of the MAC header and the frame body field to generate the FCS value. The receiving STA then uses the same CRC calculation to determine its own value of the FCS field to verify whether or not any errors occurred in the frame during the transmission (MSDU = MAC Service Data Unit / Frame | FCS = Frame Check Sequence).") #>
<# Add_Field(n:="MSDU_Rx_WEP_Error", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.2.840.10036.2.2.1.14.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when a frame is received with the WEP subfield of the Frame Control field set to one and the WEPOn value for the key mapped to the TA's MAC address indicates that the frame should not have been encrypted or that frame is discarded due to the receiving STA not implementing the privacy option (MSDU = MAC Service Data Unit / Frame).") #>
<# Add_Field(n:="MSDU_Rx_CRC_Error", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.3.6.1.4.1.9.9.272.1.2.1.1.1.2.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when a frame received has any MAC CRC error (MSDU = MAC Service Data Unit / Frame | CRC = Each Frame has a CRC checksum calculated and attached to ensure that the data was not corrupted in transit).") #>
<# Add_Field(n:="MSDU_Rx_SSID_Error", t:="DeltaCounter32", f:="NEW", m:="Snmp:1.3.6.1.4.1.9.9.272.1.2.1.1.1.3.{Index}|Snmp_Field:{0}.Value|Snmp_Transient:True", d:="This counter shall increment when a beacon or probe response frame received for which the SSIDs in the frame do not match the IEEE802dot11-MIB dot11DesiredSSID object (MSDU = MAC Service Data Unit / Frame).") #>
<# Add_Field(n:="Ssids", t:="SsidCollection", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.1.6.1.2.{Index}.#|Snmp_Field:Index") #>
<# Add_Field(n:="Bands", t:="FrequencyBandCollection", m:="Snmp:1.3.6.1.4.1.9.9.272.1.1.2.15.1.2.{Index}.#|Snmp_Field:Index") #>
<# Add_Field(n:="CDPEntries", t:="CDPEntryCollection", m:="Snmp:1.3.6.1.4.1.9.9.23.1.2.1.1.3.{Index}.#|Snmp_Field:Index", d:="CDP Entries for this Port.") #>
<#@ include file="%TEMPLATES_PATH%\Classes\VB_Object.tt" #>