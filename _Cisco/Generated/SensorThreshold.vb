Namespace Cisco

	''' <summary>Frequency Band</summary>
	''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
	''' <generator-date>08/02/2014 18:01:40</generator-date>
	''' <generator-functions>1</generator-functions>
	''' <generator-source>Caerus\_Cisco\Generated\SensorThreshold.tt</generator-source>
	''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
	''' <generator-version>1</generator-version>
	<System.CodeDom.Compiler.GeneratedCode("Caerus\_Cisco\Generated\SensorThreshold.tt", "1")> _
	<System.Serializable()> _
	Partial Public Class SensorThreshold
		Inherits System.Object
		Implements System.IComparable
		Implements System.IFormattable
		Implements System.Xml.Serialization.IXmlSerializable

		#Region " Public Constructors "

			''' <summary>Default Constructor</summary>
			Public Sub New()

				MyBase.New()

			End Sub

			''' <summary>Parametered Constructor (1 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32 _
			)

				MyBase.New()

				Index = _Index

			End Sub

			''' <summary>Parametered Constructor (2 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Severity As SensorThresholdSeverity _
			)

				MyBase.New()

				Index = _Index
				Severity = _Severity

			End Sub

			''' <summary>Parametered Constructor (3 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Severity As SensorThresholdSeverity, _
				ByVal _Relation As SensorThresholdrelation _
			)

				MyBase.New()

				Index = _Index
				Severity = _Severity
				Relation = _Relation

			End Sub

			''' <summary>Parametered Constructor (4 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Severity As SensorThresholdSeverity, _
				ByVal _Relation As SensorThresholdrelation, _
				ByVal _Value As System.Int64 _
			)

				MyBase.New()

				Index = _Index
				Severity = _Severity
				Relation = _Relation
				Value = _Value

			End Sub

			''' <summary>Parametered Constructor (5 Parameters)</summary>
			Public Sub New( _
				ByVal _Index As System.Int32, _
				ByVal _Severity As SensorThresholdSeverity, _
				ByVal _Relation As SensorThresholdrelation, _
				ByVal _Value As System.Int64, _
				ByVal _Status As System.Boolean _
			)

				MyBase.New()

				Index = _Index
				Severity = _Severity
				Relation = _Relation
				Value = _Value
				Status = _Status

			End Sub

		#End Region

		#Region " Class Plumbing/Interface Code "

			#Region " IComparable Implementation "

				#Region " Public Methods "

					''' <summary>Comparison Method</summary>
					Public Overridable Function IComparable_CompareTo( _
						ByVal value As System.Object _
					) As System.Int32 Implements System.IComparable.CompareTo

						Dim typed_Value As SensorThreshold = TryCast(value, SensorThreshold)

						If typed_Value Is Nothing Then

							Throw New ArgumentException(String.Format("Value is not of comparable type: {0}", value.GetType.Name), "Value")

						Else

							Dim return_Value As Integer = 0

							return_Value = Index.CompareTo(typed_Value.Index)
							If return_Value <> 0 Then Return return_Value

							Return return_Value

						End If

					End Function

				#End Region

			#End Region

			#Region " IFormattable Implementation "

				#Region " Public Constants "

					''' <summary>Public Shared Reference to the Name of the Property: AsString</summary>
					''' <remarks></remarks>
					Public Const PROPERTY_ASSTRING As String = "AsString"

				#End Region

				#Region " Public Properties "

					''' <summary></summary>
					''' <remarks></remarks>
					Public ReadOnly Property AsString() As System.String
						Get
							Return Me.ToString()
						End Get
					End Property

				#End Region

				#Region " Public Shared Methods "

					Public Shared Function ToString_default( _
						ByVal Value As System.Int64 _
					) As String

						Return String.Format( _
							"{0}", _
							Value)

					End Function

				#End Region

				#Region " Public Methods "

					Public Overloads Overrides Function ToString() As String

						Return Me.ToString(String.Empty, Nothing)

					End Function

					Public Overloads Function ToString( _
						ByVal format As String _
					) As String

						If String.IsNullOrEmpty(format) OrElse String.Compare(format, "default", True) = 0 Then

							Return ToString_default( _
								Value _
							)

						End If

						Return String.Empty

					End Function

					Public Overloads Function ToString( _
						ByVal format As String, _
						ByVal formatProvider As System.IFormatProvider _
					) As String Implements System.IFormattable.ToString

						If String.IsNullOrEmpty(format) OrElse String.Compare(format, "default", True) = 0 Then	

							Return ToString_default( _
								Value _
							)

						End If

						Return String.Empty

					End Function

				#End Region

			#End Region

			#Region " IXmlSerialisable Implementation "

				#Region " Public Methods "

					''' <summary>Method to Return Schema Depicting Object/Class</summary>
					''' <remarks></remarks>
					Public Function IXmlSerialisable_GetSchema() As System.Xml.Schema.XmlSchema Implements System.Xml.Serialization.IXmlSerializable.GetSchema
						Return Leviathan.Configuration.XmlSerialiser.GenerateSchema(Me.GetType)
					End Function

					''' <summary></summary>
					''' <remarks></remarks>
					Public Sub IXmlSerialisable_ReadXml( _
						ByVal reader As System.Xml.XmlReader _
					) Implements System.Xml.Serialization.IXmlSerializable.ReadXml
						Leviathan.Configuration.XmlSerialiser.ReadXml(Me, reader)
					End Sub

					''' <summary></summary>
					''' <remarks></remarks>
					Public Sub IXmlSerialisable_WriteXml( _
						ByVal writer As System.Xml.XmlWriter _
					) Implements System.Xml.Serialization.IXmlSerializable.WriteXml
						Leviathan.Configuration.XmlSerialiser.WriteXml(Me, writer)
					End Sub

				#End Region

			#End Region

		#End Region

		#Region " Public Constants "

			''' <summary>Public Shared Reference to the Name of the Property: Index</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_INDEX As String = "Index"

			''' <summary>Public Shared Reference to the Name of the Property: Severity</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_SEVERITY As String = "Severity"

			''' <summary>Public Shared Reference to the Name of the Property: Relation</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_RELATION As String = "Relation"

			''' <summary>Public Shared Reference to the Name of the Property: Value</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_VALUE As String = "Value"

			''' <summary>Public Shared Reference to the Name of the Property: Status</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_STATUS As String = "Status"

		#End Region

		#Region " Private Variables "

			''' <summary>Private Data Storage Variable for Property: Index</summary>
			''' <remarks></remarks>
			Private m_Index As System.Int32

			''' <summary>Private Data Storage Variable for Property: Severity</summary>
			''' <remarks></remarks>
			Private m_Severity As SensorThresholdSeverity

			''' <summary>Private Data Storage Variable for Property: Relation</summary>
			''' <remarks></remarks>
			Private m_Relation As SensorThresholdrelation

			''' <summary>Private Data Storage Variable for Property: Value</summary>
			''' <remarks></remarks>
			Private m_Value As System.Int64

			''' <summary>Private Data Storage Variable for Property: Status</summary>
			''' <remarks></remarks>
			Private m_Status As System.Boolean

		#End Region

		#Region " Public Properties "

			''' <summary>Provides Access to the Property: Index</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Index")> _
			Public Property Index() As System.Int32
				Get
					Return m_Index
				End Get
				Set(value As System.Int32)
					m_Index = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Severity</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Severity")> _
			Public Property Severity() As SensorThresholdSeverity
				Get
					Return m_Severity
				End Get
				Set(value As SensorThresholdSeverity)
					m_Severity = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Relation</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Relation")> _
			Public Property Relation() As SensorThresholdrelation
				Get
					Return m_Relation
				End Get
				Set(value As SensorThresholdrelation)
					m_Relation = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Value</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Value")> _
			Public Property Value() As System.Int64
				Get
					Return m_Value
				End Get
				Set(value As System.Int64)
					m_Value = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Status</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Status")> _
			Public Property Status() As System.Boolean
				Get
					Return m_Status
				End Get
				Set(value As System.Boolean)
					m_Status = value
				End Set
			End Property

		#End Region

	End Class

End Namespace